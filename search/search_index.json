{
    "docs": [
        {
            "location": "/", 
            "text": "PlinkerRPC PHP client/server makes it really easy to link and execute PHP component classes on remote systems, while maintaining the feel of a local method call.\n\n\nRedBeanPHP component which will enable you to directly manage databases on remote sites.\n\n\nComposer\n\n\n{\n    \nrequire\n: {\n        \nplinker/redbean\n: \n=v0.1\n\n    }\n}\n\n\n\n\n\nMaking a remote call.\n\n\n?php\n\n\nrequire\n \nvendor/autoload.php\n;\n\n\n\ntry\n \n{\n\n\n    \n/**\n\n\n     * Plinker Config\n\n\n     */\n\n    \n$config\n \n=\n \n[\n\n        \n// plinker connection | using tasks as to write in the correct .sqlite file\n\n        \nplinker\n \n=\n \n[\n\n            \nendpoint\n \n=\n \nhttp://127.0.0.1/examples/redbean/server.php\n,\n\n            \npublic_key\n  \n=\n \nmakeSomethingUp\n,\n\n            \nprivate_key\n \n=\n \nagainMakeSomethingUp\n\n        \n],\n\n\n        \n// database connection\n\n        \ndatabase\n \n=\n \n[\n\n            \ndsn\n      \n=\n \nsqlite:./.plinker/database.db\n,\n\n            \nhost\n     \n=\n \n,\n\n            \nname\n     \n=\n \n,\n\n            \nusername\n \n=\n \n,\n\n            \npassword\n \n=\n \n,\n\n            \nfreeze\n   \n=\n \nfalse\n,\n\n            \ndebug\n    \n=\n \nfalse\n,\n\n        \n]\n\n    \n];\n\n\n    \n// init plinker endpoint client\n\n    \n$rdb\n \n=\n \nnew\n \n\\Plinker\\Core\\Client\n(\n\n        \n// where is the plinker server\n\n        \n$config\n[\nplinker\n][\nendpoint\n],\n\n\n        \n// component namespace to interface to\n\n        \nRedbean\\Redbean\n,\n\n\n        \n// keys\n\n        \n$config\n[\nplinker\n][\npublic_key\n],\n\n        \n$config\n[\nplinker\n][\nprivate_key\n],\n\n\n        \n// construct values which you pass to the component\n\n        \n$config\n[\ndatabase\n]\n\n    \n);\n\n\n    \n//..\n\n\n\n}\n \ncatch\n \n(\n\\Exception\n \n$e\n)\n \n{\n\n    \nexit\n(\nget_class\n(\n$e\n)\n.\n: \n.\n$e\n-\ngetMessage\n());\n\n\n}\n\n\n\n\n\n\nthen the server part...\n\n\n?php\n\n\nrequire\n \nvendor/autoload.php\n;\n\n\n\n/**\n\n\n * POST Server Part\n\n\n */\n\n\nif\n \n(\n$_SERVER\n[\nREQUEST_METHOD\n]\n \n==\n \nPOST\n)\n \n{\n\n    \n$server\n \n=\n \nnew\n \nPlinker\\Core\\Server\n(\n\n        \n$_POST\n,\n\n        \nusername\n,\n\n        \npassword\n\n    \n);\n\n    \nexit\n(\n$server\n-\nexecute\n());\n\n\n}\n\n\n\n\n\n\nSee the \norganisations page\n for additional components.", 
            "title": "Home"
        }, 
        {
            "location": "/#making-a-remote-call", 
            "text": "?php  require   vendor/autoload.php ;  try   { \n\n     /**       * Plinker Config       */ \n     $config   =   [ \n         // plinker connection | using tasks as to write in the correct .sqlite file \n         plinker   =   [ \n             endpoint   =   http://127.0.0.1/examples/redbean/server.php , \n             public_key    =   makeSomethingUp , \n             private_key   =   againMakeSomethingUp \n         ], \n\n         // database connection \n         database   =   [ \n             dsn        =   sqlite:./.plinker/database.db , \n             host       =   , \n             name       =   , \n             username   =   , \n             password   =   , \n             freeze     =   false , \n             debug      =   false , \n         ] \n     ]; \n\n     // init plinker endpoint client \n     $rdb   =   new   \\Plinker\\Core\\Client ( \n         // where is the plinker server \n         $config [ plinker ][ endpoint ], \n\n         // component namespace to interface to \n         Redbean\\Redbean , \n\n         // keys \n         $config [ plinker ][ public_key ], \n         $config [ plinker ][ private_key ], \n\n         // construct values which you pass to the component \n         $config [ database ] \n     ); \n\n     //..  }   catch   ( \\Exception   $e )   { \n     exit ( get_class ( $e ) . :  . $e - getMessage ());  }   then the server part...  ?php  require   vendor/autoload.php ;  /**   * POST Server Part   */  if   ( $_SERVER [ REQUEST_METHOD ]   ==   POST )   { \n     $server   =   new   Plinker\\Core\\Server ( \n         $_POST , \n         username , \n         password \n     ); \n     exit ( $server - execute ());  }   See the  organisations page  for additional components.", 
            "title": "Making a remote call."
        }
    ]
}